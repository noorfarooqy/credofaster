<?php
/*
 * CredofasterSDK
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace Noorfarooqy\Credofaster\Models;

use JsonSerializable;

/**
 *Payload the Partner receives on for each Event
 */
class EventCallbackPayload implements JsonSerializable
{
    /**
     * This is shared by the system and should be referred when doing any debugging
     * @required
     * @maps EventId
     * @var string $eventId public property
     */
    public $eventId;

    /**
     * Contains the EVENT type.  detailed list of this can be shared on Request to the admin
     * @required
     * @maps EventType
     * @var string $eventType public property
     */
    public $eventType;

    /**
     * For Events that are related with the Clients Request, you will get a Request ID that was generate by
     * the system when you made a  service call
     * @maps RequestId
     * @var string|null $requestId public property
     */
    public $requestId;

    /**
     * Contains any addition fields,(CAN BE NESTED). See the PDF for more details
     * @required
     * @maps EventData
     * @var object $eventData public property
     */
    public $eventData;

    /**
     * Constructor to set initial or default values of member properties
     * @param string $eventId   Initialization value for $this->eventId
     * @param string $eventType Initialization value for $this->eventType
     * @param string $requestId Initialization value for $this->requestId
     * @param object $eventData Initialization value for $this->eventData
     */
    public function __construct()
    {
        switch (func_num_args()) {
            case 4:
                $this->eventId = func_get_arg(0);
                $this->eventType = func_get_arg(1);
                $this->requestId = func_get_arg(2);
                $this->eventData = func_get_arg(3);
                break;

            default:
                $this->eventId = '123456789';
                $this->eventType = 'QUEUED';
                break;
        }
    }

    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['EventId'] = $this->eventId;
        $json['EventType'] = $this->eventType;
        $json['RequestId'] = $this->requestId;
        $json['EventData'] = $this->eventData;

        return $json;
    }
}
